//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KirylLencykToDoManager.ToDoManagerServiceReference {
    using System.Runtime.Serialization;
    using System;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ToDoManagerServiceReference.IToDoManager")]
    public interface IToDoManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoManager/GetTodoList", ReplyAction="http://tempuri.org/IToDoManager/GetTodoListResponse")]
        KirylLencykToDoManager.ToDoManagerServiceReference.ToDoItem[] GetTodoList(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoManager/GetTodoList", ReplyAction="http://tempuri.org/IToDoManager/GetTodoListResponse")]
        System.Threading.Tasks.Task<KirylLencykToDoManager.ToDoManagerServiceReference.ToDoItem[]> GetTodoListAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoManager/UpdateToDoItem", ReplyAction="http://tempuri.org/IToDoManager/UpdateToDoItemResponse")]
        void UpdateToDoItem(KirylLencykToDoManager.ToDoManagerServiceReference.ToDoItem todo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoManager/UpdateToDoItem", ReplyAction="http://tempuri.org/IToDoManager/UpdateToDoItemResponse")]
        System.Threading.Tasks.Task UpdateToDoItemAsync(KirylLencykToDoManager.ToDoManagerServiceReference.ToDoItem todo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoManager/CreateToDoItem", ReplyAction="http://tempuri.org/IToDoManager/CreateToDoItemResponse")]
        void CreateToDoItem(KirylLencykToDoManager.ToDoManagerServiceReference.ToDoItem todo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoManager/CreateToDoItem", ReplyAction="http://tempuri.org/IToDoManager/CreateToDoItemResponse")]
        System.Threading.Tasks.Task CreateToDoItemAsync(KirylLencykToDoManager.ToDoManagerServiceReference.ToDoItem todo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoManager/DeleteToDoItem", ReplyAction="http://tempuri.org/IToDoManager/DeleteToDoItemResponse")]
        void DeleteToDoItem(int todoItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoManager/DeleteToDoItem", ReplyAction="http://tempuri.org/IToDoManager/DeleteToDoItemResponse")]
        System.Threading.Tasks.Task DeleteToDoItemAsync(int todoItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoManager/CreateUser", ReplyAction="http://tempuri.org/IToDoManager/CreateUserResponse")]
        int CreateUser(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoManager/CreateUser", ReplyAction="http://tempuri.org/IToDoManager/CreateUserResponse")]
        System.Threading.Tasks.Task<int> CreateUserAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IToDoManagerChannel : KirylLencykToDoManager.ToDoManagerServiceReference.IToDoManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ToDoManagerClient : System.ServiceModel.ClientBase<KirylLencykToDoManager.ToDoManagerServiceReference.IToDoManager>, KirylLencykToDoManager.ToDoManagerServiceReference.IToDoManager {
        
        public ToDoManagerClient() {
        }
        
        public ToDoManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ToDoManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ToDoManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ToDoManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public KirylLencykToDoManager.ToDoManagerServiceReference.ToDoItem[] GetTodoList(int userId) {
            return base.Channel.GetTodoList(userId);
        }
        
        public System.Threading.Tasks.Task<KirylLencykToDoManager.ToDoManagerServiceReference.ToDoItem[]> GetTodoListAsync(int userId) {
            return base.Channel.GetTodoListAsync(userId);
        }
        
        public void UpdateToDoItem(KirylLencykToDoManager.ToDoManagerServiceReference.ToDoItem todo) {
            base.Channel.UpdateToDoItem(todo);
        }
        
        public System.Threading.Tasks.Task UpdateToDoItemAsync(KirylLencykToDoManager.ToDoManagerServiceReference.ToDoItem todo) {
            return base.Channel.UpdateToDoItemAsync(todo);
        }
        
        public void CreateToDoItem(KirylLencykToDoManager.ToDoManagerServiceReference.ToDoItem todo) {
            base.Channel.CreateToDoItem(todo);
        }
        
        public System.Threading.Tasks.Task CreateToDoItemAsync(KirylLencykToDoManager.ToDoManagerServiceReference.ToDoItem todo) {
            return base.Channel.CreateToDoItemAsync(todo);
        }
        
        public void DeleteToDoItem(int todoItemId) {
            base.Channel.DeleteToDoItem(todoItemId);
        }
        
        public System.Threading.Tasks.Task DeleteToDoItemAsync(int todoItemId) {
            return base.Channel.DeleteToDoItemAsync(todoItemId);
        }
        
        public int CreateUser(string name) {
            return base.Channel.CreateUser(name);
        }
        
        public System.Threading.Tasks.Task<int> CreateUserAsync(string name) {
            return base.Channel.CreateUserAsync(name);
        }
    }
}
